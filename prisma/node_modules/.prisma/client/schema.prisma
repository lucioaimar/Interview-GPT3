datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

generator client {
    provider = "prisma-client-js"
    output   = "../node_modules/.prisma/client"
}

model Interview {
    id               Int        @id @default(autoincrement())
    createdAt        DateTime   @default(now())
    updatedAt        DateTime   @default(now()) @updatedAt
    title            String
    user             User       @relation(fields: [userId], references: [id])
    framework        Framework  @relation(fields: [frameworkId], references: [id])
    seniority        Seniority  @relation(fields: [seniorityId], references: [id])
    questionNumber   Int
    userId           Int
    frameworkId      Int
    seniorityId      Int
    questions        Question[]
    prompt           String
    interviewerName  String
    interviewerImage String
    finalAssesment   String?
}

model Question {
    id                Int       @id @default(autoincrement())
    createdAt         DateTime  @default(now())
    updatedAt         DateTime  @updatedAt
    content           String
    answer            String?
    correct           Boolean?
    interviewerAnswer String?
    interview         Interview @relation(fields: [interviewId], references: [id])
    interviewId       Int
}

model User {
    id          Int         @id @default(autoincrement())
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @default(now()) @updatedAt
    email       String      @unique
    password    String
    name        String
    avatarImage String?
    Interview   Interview[]
}

model Framework {
    id        Int         @id @default(autoincrement())
    createdAt DateTime    @default(now())
    updatedAt DateTime    @default(now()) @updatedAt
    name      String
    image     String
    Interview Interview[]
}

model Seniority {
    id        Int         @id @default(autoincrement())
    createdAt DateTime    @default(now())
    updatedAt DateTime    @default(now()) @updatedAt
    name      String
    Interview Interview[]
}
